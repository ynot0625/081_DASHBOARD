#                title=sprintf("PM-2.5 Long-Term Trend(%d to %d)\n",
#                              range(as.integer(data$year))[1], range(as.integer(data$year))[2]))
head(data)
#library(gganimate)
#library(transformr)
#gg +  transition_reveal(date2)
gg
png(filename=paste0("DAGR/image8_",i,".png",sep=""),
width = 1920, height = 1080, res=200)
gg
dev.off()
data$PM2.5[data$year > i] <- NA
data$decade_mean[data$year > i] <- NA
data$annum_mean[data$year > i] <- NA
data$month_mean[data$year > i] <- NA
# start plot --------------------------------------------------------------
gg <- ggplot()
gg <- gg + theme_bw()
gg <- gg + theme(panel.grid=element_blank())
gg <- gg + theme(panel.border=element_blank())
gg <- gg + theme(legend.position=c(0.85, 0.9))
gg <- gg + theme(legend.key=element_blank())
gg <- gg + theme(legend.background=element_blank())
gg <- gg + theme(text = element_text(size=17))
# daily data ------------------------------------------------------------
gg <- gg + geom_line(data=data2, aes(date2, y=PM2.5, color = "daily mean"),
size=0.35, alpha=0.5)
#gg <- gg + geom_point(data=data, aes(date2, y=PM2.5, color = "daily mean"),
#                      size=0.35, alpha=0.25)
# decade vertical markers -------------------------------------------------
gg <- gg + geom_vline(data=data %>% select(year),
aes(xintercept=as.Date(sprintf("%s-12-31", year))),
size=1., color="#4575b4", linetype="dotted", alpha=0.5)
# annual mean ------------------------------------------------------------
gg <- gg + geom_segment(data=data %>% distinct(annum_mean,start2, end2),
aes(x=start2,xend=end2,y=annum_mean,yend=annum_mean,
color = "annual mean"),  size=1.0)
# monthly data -------------------------------------------------------------
gg <- gg + geom_line(data=data %>% distinct(year, Month, decade,decade_mean),
aes(x=as.Date(sprintf("%s-%s-15",year,Month)),
y=decade_mean, color = "monthly mean"),
size=0.5 )
gg <- gg + geom_point(data=data %>% distinct(year, Month, decade,decade_mean),
aes(x=as.Date(sprintf("%s-%s-15",year,Month)),
y=decade_mean, color = "monthly mean"),
size=1.5)
# additional annotations --------------------------------------------------
# max monthly mean horizontal marker/text
gg <- gg + geom_hline(yintercept=max(data$decade_mean),  alpha=0.9,
color="#d73027", linetype="dashed", size=1)
gg <- gg + annotate("text",
x=as.Date(sprintf("%4.0f-12-31", mean(range(as.integer(data$year))))),
y=max(data$decade_mean),
color="#d73027", alpha=0.9,
hjust=0.25, vjust=-1, size=5,
label=sprintf("Max monthly mean PM2.5 %2.1f ug/m3", max(data$tdecade_mean)))
# max daily mean horizontal marker/text
gg <- gg + geom_hline(yintercept=max(data$PM2.5),  alpha=0.9,
color="#7f7f7f", linetype="dashed", size=1)
gg <- gg + annotate("text",
x=as.Date(sprintf("%4.0f-12-31", mean(range(as.integer(data$year))))),
y=max(data$PM2.5)-20,
color="#7f7f7f",  alpha=0.9,
hjust=0.25, vjust=-1, size=5,
label=sprintf("Max daily mean PM2.5 %2.1f ug/m3", max(data$tPM2.5)))
# set colors --------------------------------------------------------------
gg <- gg + scale_color_manual(name="", values=c("#4575b4","#7f7f7f","#d73027"))
# set x axis limits -------------------------------------------------------
gg <- gg + scale_x_date(expand=c(0, 0),
limits=c(as.Date(sprintf("%4.0f-01-01", range(as.integer(data$year))[1])),
as.Date(sprintf("%4.0f-12-31", range(as.integer(data$year))[2]))),
date_breaks = "2 year",
date_labels = "%Y")
yticks <- c(0,25,50,75,100,200,300,400)
#yticks <- c(0,25,50,75,100,125, 150)
gg <- gg + #geom_rect(aes(xmin=as.Date(sprintf("%4.0f-01-01", range(as.integer(data$year))[1])),
#               xmax=as.Date(sprintf("%4.0f-12-31", range(as.integer(data$year))[2])),
#               ymin=85, ymax=90), fill="white") +
scale_y_continuous(limits=c(0,NA),
breaks=  trans(yticks),
#breaks = yticks,
labels = yticks)
trans(yticks)
gg <- gg + xlab("")
# add labels --------------------------------------------------------------
#gg <- gg + labs(x=NULL, y="PM2.5 concentration(ug/m3)",
#                title=sprintf("PM-2.5 Long-Term Trend(%d to %d)\n",
#                              range(as.integer(data$year))[1], range(as.integer(data$year))[2]))
head(data)
#library(gganimate)
#library(transformr)
#gg +  transition_reveal(date2)
gg
png(filename=paste0("DAGR/image8_",i,".png",sep=""),
width = 1920, height = 1080, res=200)
gg
dev.off()
# start plot --------------------------------------------------------------
gg <- ggplot()
gg <- gg + theme_bw()
gg <- gg + theme(panel.grid=element_blank())
gg <- gg + theme(panel.border=element_blank())
gg <- gg + theme(legend.position=c(0.85, 0.9))
gg <- gg + theme(legend.key=element_blank())
gg <- gg + theme(legend.background=element_blank())
gg <- gg + theme(text = element_text(size=17))
# daily data ------------------------------------------------------------
gg <- gg + geom_line(data=data2, aes(date2, y=PM2.5, color = "daily mean"),
size=0.35, alpha=0.5)
#gg <- gg + geom_point(data=data, aes(date2, y=PM2.5, color = "daily mean"),
#                      size=0.35, alpha=0.25)
# decade vertical markers -------------------------------------------------
gg <- gg + geom_vline(data=data %>% select(year),
aes(xintercept=as.Date(sprintf("%s-12-31", year))),
size=1., color="#4575b4", linetype="dotted", alpha=0.5)
# annual mean ------------------------------------------------------------
gg <- gg + geom_segment(data=data %>% distinct(annum_mean,start2, end2),
aes(x=start2,xend=end2,y=annum_mean,yend=annum_mean,
color = "annual mean"),  size=1.0)
# monthly data -------------------------------------------------------------
gg <- gg + geom_line(data=data %>% distinct(year, Month, decade,decade_mean),
aes(x=as.Date(sprintf("%s-%s-15",year,Month)),
y=decade_mean, color = "monthly mean"),
size=0.5 )
gg <- gg + geom_point(data=data %>% distinct(year, Month, decade,decade_mean),
aes(x=as.Date(sprintf("%s-%s-15",year,Month)),
y=decade_mean, color = "monthly mean"),
size=1.5)
# additional annotations --------------------------------------------------
# max monthly mean horizontal marker/text
gg <- gg + geom_hline(yintercept=max(data$decade_mean),  alpha=0.9,
color="#d73027", linetype="dashed", size=1)
gg <- gg + annotate("text",
x=as.Date(sprintf("%4.0f-12-31", mean(range(as.integer(data$year))))),
y=max(data$decade_mean),
color="#d73027", alpha=0.9,
hjust=0.25, vjust=-1, size=5,
label=sprintf("Max monthly mean PM2.5 %2.1f ug/m3", max(data$tdecade_mean)))
# max daily mean horizontal marker/text
gg <- gg + geom_hline(yintercept=max(data$PM2.5),  alpha=0.9,
color="#7f7f7f", linetype="dashed", size=1)
gg <- gg + annotate("text",
x=as.Date(sprintf("%4.0f-12-31", mean(range(as.integer(data$year))))),
y=max(data$PM2.5)-20,
color="#7f7f7f",  alpha=0.9,
hjust=0.25, vjust=-1, size=5,
label=sprintf("Max daily mean PM2.5 %2.1f ug/m3", max(data$tPM2.5)))
# set colors --------------------------------------------------------------
gg <- gg + scale_color_manual(name="", values=c("#4575b4","#7f7f7f","#d73027"))
# set x axis limits -------------------------------------------------------
gg <- gg + scale_x_date(expand=c(0, 0),
limits=c(as.Date(sprintf("%4.0f-01-01", range(as.integer(data$year))[1])),
as.Date(sprintf("%4.0f-12-31", range(as.integer(data$year))[2]))),
date_breaks = "2 year",
date_labels = "%Y")
yticks <- c(0,25,50,75,100,200,300,400)
#yticks <- c(0,25,50,75,100,125, 150)
gg <- gg + #geom_rect(aes(xmin=as.Date(sprintf("%4.0f-01-01", range(as.integer(data$year))[1])),
#               xmax=as.Date(sprintf("%4.0f-12-31", range(as.integer(data$year))[2])),
#               ymin=85, ymax=90), fill="white") +
scale_y_continuous(limits=c(0,NA),
breaks=  trans(yticks),
#breaks = yticks,
labels = yticks)
trans(yticks)
#gg <- gg + xlab("")
# add labels --------------------------------------------------------------
gg <- gg + labs(x=NULL, y="PM2.5 concentration(ug/m3)",
title=sprintf("PM-2.5 Long-Term Trend(%d to %d)\n",
range(as.integer(data$year))[1], range(as.integer(data$year))[2]))
head(data)
#library(gganimate)
#library(transformr)
#gg +  transition_reveal(date2)
gg
png(filename=paste0("DAGR/image8_",i,".png",sep=""),
width = 1920, height = 1080, res=200)
gg
dev.off()
#install.packages("ggplot2")
rm(list=ls())
fn <- "DAIN/PM2.5_20010101_항목별_일평균_기간별 자료.csv"
df_pm2.5 <- read.table(fn, header=TRUE, sep=",")[,c("년","월","일","평균")]
head(df_pm2.5)
names(df_pm2.5) <- c("Year","Month","Day","PM2.5")
head(df_pm2.5)
df_pm2.5$date <- with(df_pm2.5, as.POSIXct(paste(Year,Month,Day),format="%Y%m%d"),tz="GMT")
df_pm2.5$Jul <- as.integer(format(df_pm2.5$date, "%j"))
head(df_pm2.5)
cols <- c("#e7f0fa","#c9e2f6","#95cbee","#0099dc","#4ab04a","#ffd73e",
"#eec73a","#e29421","#f05336","#ce472e")
#install.packages("extrafont")
extrafont::loadfonts()
df <- df_pm2.5
head(df)
tail(df)
gg <- ggplot(subset(df, Year >= 2001 & Year <= 2021) , aes(x=Jul, y=Year)) +
geom_tile(aes(fill=PM2.5), colours="transparent",
width=1, height=0.9) + theme_minimal() +
scale_fill_gradientn(colours = cols, limits=c(1,75),
breaks =c(0,15,35,50,75,Inf),
na.value = "red",
guide=guide_colorbar(ticks=T, nbin=50,
barheight=.5, label = T,
barwidith=10))
gg
gg <- gg +
scale_y_continuous(expand = c(0,0),
breaks = c(2001,2004,2007,2010,2013,2016,2019),
labels = c("2001","2004","2007","2010","2013","2016","2019")) +
#  scale_y_continuous(expand = c(0,0),
#                     breaks = c(2010,2011,2012,2013,2014,2015,2016,2017,2018,2019),
#                     labels = c("2010","2011","2012","2013","2014","2015","2016",
#                                "2017","2018","2019")) +
scale_x_continuous(expand = c(0,0),
breaks = c(15,45,75,105,135,165,195,228,258,288,320,350),
labels = c("JAN","FEB","MAR","APR","MAY","JUN",
"JUL","AUG","SEP","OCT","NOV","DEC")) +
geom_segment(x=0,xend=366,y=2019.5,yend=2019.5, size=.9, colors="grey") +
labs(x="",y="", fill="")
gg
gg <- gg +
theme(legend.position = c(0.5, -0.13),
legend.direction = "horizontal",
legend.text = element_text(colour="black"),
plot.margin = grid::unit(c(.5,.5,1.5,.5),"cm"),
axis.text.y=element_text(size=8,
hjust=1.5),
axis.text.x=element_text(size=8),
axis.ticks.y=element_blank(),
panel.grid=element_blank(),
title=element_text(hjust=-0.7, vjust=1))
#text=element_text(family="TT Times New Roman"))
gg
gg
png(filename="DAGR/image7.png",
width=1920, height = 1080, res = 200)
gg
dev.off()
gg <- gg +
theme(legend.position = c(0.5, -0.13),
legend.direction = "horizontal",
legend.text = element_text(colour="black"),
plot.margin = grid::unit(c(.5,.5,1.5,.5),"cm"),
axis.text.y=element_text(size=8,
hjust=1.5),
axis.text.x=element_text(size=8),
axis.ticks.y=element_blank(),
panel.grid=element_blank(),
title=element_text(hjust=-0.7, vjust=1),
text = element_text(size=17))
gg
png(filename="DAGR/image7.png",
width=1920, height = 1080, res = 200)
gg
dev.off()
gg <- ggplot()
gg <- gg + theme(text = element_text(size=17))
gg <- ggplot(subset(df, Year >= 2001 & Year <= 2021) , aes(x=Jul, y=Year)) +
geom_tile(aes(fill=PM2.5), colours="transparent",
width=1, height=0.9) + theme_minimal() +
scale_fill_gradientn(colours = cols, limits=c(1,75),
breaks =c(0,15,35,50,75,Inf),
na.value = "red",
guide=guide_colorbar(ticks=T, nbin=50,
barheight=.5, label = T,
barwidith=10))
gg
gg <- gg +
scale_y_continuous(expand = c(0,0),
breaks = c(2001,2004,2007,2010,2013,2016,2019),
labels = c("2001","2004","2007","2010","2013","2016","2019")) +
#  scale_y_continuous(expand = c(0,0),
#                     breaks = c(2010,2011,2012,2013,2014,2015,2016,2017,2018,2019),
#                     labels = c("2010","2011","2012","2013","2014","2015","2016",
#                                "2017","2018","2019")) +
scale_x_continuous(expand = c(0,0),
breaks = c(15,45,75,105,135,165,195,228,258,288,320,350),
labels = c("JAN","FEB","MAR","APR","MAY","JUN",
"JUL","AUG","SEP","OCT","NOV","DEC")) +
geom_segment(x=0,xend=366,y=2019.5,yend=2019.5, size=.9, colors="grey") +
labs(x="",y="", fill="")
gg
gg <- gg +
theme(legend.position = c(0.5, -0.13),
legend.direction = "horizontal",
legend.text = element_text(colour="black"),
plot.margin = grid::unit(c(.5,.5,1.5,.5),"cm"),
axis.text.y=element_text(size=8,
hjust=1.5),
axis.text.x=element_text(size=8),
axis.ticks.y=element_blank(),
panel.grid=element_blank(),
title=element_text(hjust=-0.7, vjust=1))
#text=element_text(family="TT Times New Roman"))
gg
png(filename="DAGR/image7.png",
width=1920, height = 1080, res = 200)
gg
dev.off()
gg <- ggplot()
gg <- gg + theme(text = element_text(size=25))
gg <- ggplot(subset(df, Year >= 2001 & Year <= 2021) , aes(x=Jul, y=Year)) +
geom_tile(aes(fill=PM2.5), colours="transparent",
width=1, height=0.9) + theme_minimal() +
scale_fill_gradientn(colours = cols, limits=c(1,75),
breaks =c(0,15,35,50,75,Inf),
na.value = "red",
guide=guide_colorbar(ticks=T, nbin=50,
barheight=.5, label = T,
barwidith=10))
gg
gg <- gg +
scale_y_continuous(expand = c(0,0),
breaks = c(2001,2004,2007,2010,2013,2016,2019),
labels = c("2001","2004","2007","2010","2013","2016","2019")) +
#  scale_y_continuous(expand = c(0,0),
#                     breaks = c(2010,2011,2012,2013,2014,2015,2016,2017,2018,2019),
#                     labels = c("2010","2011","2012","2013","2014","2015","2016",
#                                "2017","2018","2019")) +
scale_x_continuous(expand = c(0,0),
breaks = c(15,45,75,105,135,165,195,228,258,288,320,350),
labels = c("JAN","FEB","MAR","APR","MAY","JUN",
"JUL","AUG","SEP","OCT","NOV","DEC")) +
geom_segment(x=0,xend=366,y=2019.5,yend=2019.5, size=.9, colors="grey") +
labs(x="",y="", fill="")
gg
gg
png(filename="DAGR/image7.png",
width=1920, height = 1080, res = 200)
gg
dev.off()
gg <- ggplot()
gg <- gg + theme(text = element_text(size=35))
gg <- ggplot(subset(df, Year >= 2001 & Year <= 2021) , aes(x=Jul, y=Year)) +
geom_tile(aes(fill=PM2.5), colours="transparent",
width=1, height=0.9) + theme_minimal() +
scale_fill_gradientn(colours = cols, limits=c(1,75),
breaks =c(0,15,35,50,75,Inf),
na.value = "red",
guide=guide_colorbar(ticks=T, nbin=50,
barheight=.5, label = T,
barwidith=10))
gg
gg <- gg +
scale_y_continuous(expand = c(0,0),
breaks = c(2001,2004,2007,2010,2013,2016,2019),
labels = c("2001","2004","2007","2010","2013","2016","2019")) +
#  scale_y_continuous(expand = c(0,0),
#                     breaks = c(2010,2011,2012,2013,2014,2015,2016,2017,2018,2019),
#                     labels = c("2010","2011","2012","2013","2014","2015","2016",
#                                "2017","2018","2019")) +
scale_x_continuous(expand = c(0,0),
breaks = c(15,45,75,105,135,165,195,228,258,288,320,350),
labels = c("JAN","FEB","MAR","APR","MAY","JUN",
"JUL","AUG","SEP","OCT","NOV","DEC")) +
geom_segment(x=0,xend=366,y=2019.5,yend=2019.5, size=.9, colors="grey") +
labs(x="",y="", fill="")
gg
gg <- gg +
theme(legend.position = c(0.5, -0.13),
legend.direction = "horizontal",
legend.text = element_text(colour="black"),
plot.margin = grid::unit(c(.5,.5,1.5,.5),"cm"),
axis.text.y=element_text(size=8,
hjust=1.5),
axis.text.x=element_text(size=8),
axis.ticks.y=element_blank(),
panel.grid=element_blank(),
title=element_text(hjust=-0.7, vjust=1))
#text=element_text(family="TT Times New Roman"))
gg
png(filename="DAGR/image7.png",
width=1920, height = 1080, res = 200)
gg
dev.off()
gg <- ggplot()
gg <- gg + theme(text = element_text(size=35))
gg <- ggplot(subset(df, Year >= 2001 & Year <= 2021) , aes(x=Jul, y=Year)) +
geom_tile(aes(fill=PM2.5), colours="transparent",
width=1, height=0.9) + theme_minimal() +
scale_fill_gradientn(colours = cols, limits=c(1,75),
breaks =c(0,15,35,50,75,Inf),
na.value = "red",
guide=guide_colorbar(ticks=T, nbin=50,
barheight=.5, label = T,
barwidith=10))
gg
gg <- gg +
scale_y_continuous(expand = c(0,0),
breaks = c(2001,2004,2007,2010,2013,2016,2019),
labels = c("2001","2004","2007","2010","2013","2016","2019")) +
#  scale_y_continuous(expand = c(0,0),
#                     breaks = c(2010,2011,2012,2013,2014,2015,2016,2017,2018,2019),
#                     labels = c("2010","2011","2012","2013","2014","2015","2016",
#                                "2017","2018","2019")) +
scale_x_continuous(expand = c(0,0),
breaks = c(15,45,75,105,135,165,195,228,258,288,320,350),
labels = c("JAN","FEB","MAR","APR","MAY","JUN",
"JUL","AUG","SEP","OCT","NOV","DEC")) +
geom_segment(x=0,xend=366,y=2020.5,yend=2020.5, size=.9, colors="grey") +
labs(x="",y="", fill="")
gg
gg <- gg +
theme(legend.position = c(0.5, -0.13),
legend.direction = "horizontal",
legend.text = element_text(colour="black"),
plot.margin = grid::unit(c(.5,.5,1.5,.5),"cm"),
axis.text.y=element_text(size=8,
hjust=1.5),
axis.text.x=element_text(size=8),
axis.ticks.y=element_blank(),
panel.grid=element_blank(),
title=element_text(hjust=-0.7, vjust=1))
#text=element_text(family="TT Times New Roman"))
gg
png(filename="DAGR/image7.png",
width=1920, height = 1080, res = 200)
gg
dev.off()
gg <- ggplot()
gg <- gg + theme(text = element_text(size=35))
gg <- ggplot(subset(df, Year >= 2001 & Year <= 2021) , aes(x=Jul, y=Year)) +
geom_tile(aes(fill=PM2.5), colours="transparent",
width=1, height=0.9) + theme_minimal() +
scale_fill_gradientn(colours = cols, limits=c(1,75),
breaks =c(0,15,35,50,75,Inf),
na.value = "red",
guide=guide_colorbar(ticks=T, nbin=50,
barheight=.5, label = T,
barwidith=10))
gg
gg <- gg +
scale_y_continuous(expand = c(0,0),
breaks = c(2001,2004,2007,2010,2013,2016,2019,2021),
labels = c("2001","2004","2007","2010","2013","2016","2019","2021")) +
#  scale_y_continuous(expand = c(0,0),
#                     breaks = c(2010,2011,2012,2013,2014,2015,2016,2017,2018,2019),
#                     labels = c("2010","2011","2012","2013","2014","2015","2016",
#                                "2017","2018","2019")) +
scale_x_continuous(expand = c(0,0),
breaks = c(15,45,75,105,135,165,195,228,258,288,320,350),
labels = c("JAN","FEB","MAR","APR","MAY","JUN",
"JUL","AUG","SEP","OCT","NOV","DEC")) +
geom_segment(x=0,xend=366,y=2020.5,yend=2020.5, size=.9, colors="grey") +
labs(x="",y="", fill="")
gg
gg <- gg +
theme(legend.position = c(0.5, -0.13),
legend.direction = "horizontal",
legend.text = element_text(colour="black"),
plot.margin = grid::unit(c(.5,.5,1.5,.5),"cm"),
axis.text.y=element_text(size=8,
hjust=1.5),
axis.text.x=element_text(size=8),
axis.ticks.y=element_blank(),
panel.grid=element_blank(),
title=element_text(hjust=-0.7, vjust=1))
#text=element_text(family="TT Times New Roman"))
gg
png(filename="DAGR/image7.png",
width=1920, height = 1080, res = 200)
gg
dev.off()
library(openair)
library(tidyverse)
library(dplyr)
# cleaning up environment
rm(list=ls())
setwd("C:/RWORK/020_HYSPLIT/")
source("_SRC/openair_hysplit.R")
source("_SRC/run_hysplit.R")
# cleaning up environment
rm(list=ls())
setwd("C:/RWORK/081_DASHBOARD/")
source("_SRC/run_hysplit.R")
data_out <- run_hysplit(
latitude = 37.5,
longitude = 127,
runtime = -96,
start_height = 500,
model_height = 10000,
start = 2021,
end = "2021-11-30",
hysplit_exec = "C:/hysplit4/exec",
hysplit_input = "D:/RWORK/DATA/NCEP/",
hysplit_output = "C:/RWORK/081_DASHBOARD/DAIO/hysplit_out",
site = "seoul")
head(data_out)
traj <- subset(data_out, select = -c(site, start_height))
out = "DAIO/hysplit_out/"
name = "seoul"
Year = "202101_202111"
file.name <- paste(out, name, Year, ".RData", sep = "")
save(traj, file = file.name)
cluster<-trajCluster(traj,
#selectByDate(traj, start = "1/1/2017", end = "30/9/2021"),
method = "Euclid", n.cluster= 5, #col = "Set1",
col = c("grey35","grey35","grey35","grey35","grey35","grey35"),
projection="lambert",orientation=c(0,90,0),
#xlim=c(110,150),ylim=c(30,50),parameters=c(127.5,37.5),
xlim=c(70,150),ylim=c(22,65),parameters=c(127.5,37.5),# 20211019
#xlim=c(65,145),ylim=c(20,70),parameters=c(127.5,37.5),
map.alpha=0.4, map.fill=FALSE,grid.col="transparent",map.cols="gray40",
border = "NA") #,key.position = "top",key.columns = 5)
cluster
trajPlot(traj,#col="black",
projection="lambert",orientation=c(0,90,0),
xlim=c(90,145),ylim=c(20,55),parameters=c(127.5,37.5),
map.alpha=0.4,map.fill=FALSE,grid.col="transparent",map.cols="gray40",
method = "hexbin",
col = "jet", xbin = 50, npoints = 12)
